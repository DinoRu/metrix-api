"""create initial tables

Revision ID: 0b94ff024f92
Revises: 
Create Date: 2025-08-27 00:39:24.001168

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0b94ff024f92'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('meters',
    sa.Column('meter_id_code', sa.String(length=50), nullable=False),
    sa.Column('meter_number', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('location_address', sa.Text(), nullable=True),
    sa.Column('client_name', sa.String(length=255), nullable=True),
    sa.Column('prev_reading_value', sa.Float(), nullable=True),
    sa.Column('last_reading_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('meter_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meters_meter_id_code'), 'meters', ['meter_id_code'], unique=True)
    op.create_index(op.f('ix_meters_meter_number'), 'meters', ['meter_number'], unique=True)
    op.create_index(op.f('ix_meters_status'), 'meters', ['status'], unique=False)
    op.create_table('outbox',
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('operation', sa.String(length=20), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outbox_scheduled_at'), 'outbox', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_outbox_status'), 'outbox', ['status'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'CONTROLLER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('readings',
    sa.Column('meter_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('reading_value', sa.Float(), nullable=False),
    sa.Column('reading_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reading_type', sa.String(length=50), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('accuracy_meters', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('client_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['meter_id'], ['meters.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', name='unique_client_reading')
    )
    op.create_index(op.f('ix_readings_client_id'), 'readings', ['client_id'], unique=True)
    op.create_index(op.f('ix_readings_sync_status'), 'readings', ['sync_status'], unique=False)
    op.create_table('photos',
    sa.Column('reading_id', sa.UUID(), nullable=False),
    sa.Column('storage_path', sa.String(length=500), nullable=True),
    sa.Column('presigned_url', sa.Text(), nullable=True),
    sa.Column('presigned_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('upload_status', sa.String(length=50), nullable=True),
    sa.Column('file_size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('exif_data', sa.JSON(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('taken_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['reading_id'], ['readings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_photos_upload_status'), 'photos', ['upload_status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_photos_upload_status'), table_name='photos')
    op.drop_table('photos')
    op.drop_index(op.f('ix_readings_sync_status'), table_name='readings')
    op.drop_index(op.f('ix_readings_client_id'), table_name='readings')
    op.drop_table('readings')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_outbox_status'), table_name='outbox')
    op.drop_index(op.f('ix_outbox_scheduled_at'), table_name='outbox')
    op.drop_table('outbox')
    op.drop_index(op.f('ix_meters_status'), table_name='meters')
    op.drop_index(op.f('ix_meters_meter_number'), table_name='meters')
    op.drop_index(op.f('ix_meters_meter_id_code'), table_name='meters')
    op.drop_table('meters')
    # ### end Alembic commands ###
