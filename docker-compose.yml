version: "3.9"

services:
  api:
    build: .
    container_name: api
    restart: always
    env_file: ./app/.env
    depends_on:
      - db
      - redis
    expose:
      - "8000"

  celery:
    build: .
    container_name: celery_worker
    command: celery -A app.core.celery_app.celery_app worker --loglevel=INFO -Q default
    restart: always
    env_file: ./app/.env
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A app.core.celery_app.celery_app beat --loglevel=INFO -Q default
    restart: always
    env_file: .env
    depends_on:
      - redis

  db:
    image: postgres:17
    container_name: app_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    container_name: metersync_certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/lib/letsencrypt --quiet; sleep 12h & wait $${!}; done"

volumes:
  postgres_data:
  redis_data:
  certbot-etc:
  certbot-var:
