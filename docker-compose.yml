services:
  # API FastAPI
  api:
    build: .
    container_name: api
    restart: always
    env_file:
      - ./app/.env
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./alembic:/app/alembic

  # Celery worker
  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A app.core.celery_app worker --loglevel=INFO
    restart: always
    env_file:
      - ./app/.env
    depends_on:
      - redis
      - db
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./alembic:/app/alembic

  # Celery beat
  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A app.core.celery_app beat --loglevel=INFO
    restart: always
    env_file:
      - ./app/.env
    depends_on:
      - redis
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./alembic:/app/alembic

  # Service migrations (exécuté à la demande)
  migrate:
    build: .
    command: alembic upgrade head
    depends_on:
      - db
    env_file:
      - ./app/.env
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./alembic:/app/alembic

  # PostgreSQL
  db:
    image: postgres:17
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis
  redis:
    image: redis:7
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data

  # NGINX HTTP (initial)
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
